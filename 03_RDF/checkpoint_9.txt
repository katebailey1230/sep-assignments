1. Explain a subquery in your own words.

	1A: A subquery is simply a query within a query that is run first, or, to make an analogy, it would be like part of the math equation that's in parentheses that needs to be calculated first.
	
2. Where can you use a subquery within a SELECT statement?

	2A: You can use a subquery in parentheses to the right of the initial SELECT statement.
	
3. When would you employ a subquery?

	3A: You would use a subquery if you were looking for data from separate tables based on one or more conditions.
	
4. Explain a row constructor in your own words.

	4A: A row constructor is a line of pre-defined data you're searching for in a subquery.
	
5. What happens if a row in the subquery result provides a NULL value to the comparison?

	5A: If a row in a result provides a NULL value, then the result will return NULL instead of TRUE.
	
6. What are the ways to use a subquery within a WHERE clause?

	6A: IN, NOT IN, EXISTS, NOT EXISTS, SOME, ANY, ALL
	
7. Build an employees table and a shifts table with appropriate primary and foreign keys. Then, write queries to find the following information:
		-List all employees and all shifts.
		
		SELECT e.first_name, e.last_name, s.shift FROM employees AS e, shifts AS s WHERE e.employee_id = s.employee_id;
		first_name | last_name |  shift  
		------------+-----------+---------
 		Britta     | Perry     | Morning
 		Ben        | Chang     | Noon
 		Troy       | Barnes    | Night
 		Pierce     | Hawthorne | Morning
 		Shirley    | Bennet    | Noon
 		Abed       | Nadeer    | Night
 		Jeff       | Winger    | Noon
		(7 rows)

		-Create a list of all possible schedules.	
		
		SELECT e.first_name, e.last_name, s.shift FROM employees AS e, shifts AS s;
		first_name | last_name |  shift  
		------------+-----------+---------
		Britta     | Perry     | Morning
		Ben        | Chang     | Morning
		Troy       | Barnes    | Morning
		Pierce     | Hawthorne | Morning
		Shirley    | Bennet    | Morning
		Abed       | Nadeer    | Morning
		Jeff       | Winger    | Morning
		Britta     | Perry     | Noon
		Ben        | Chang     | Noon
		Troy       | Barnes    | Noon
		Pierce     | Hawthorne | Noon
		Shirley    | Bennet    | Noon
		Abed       | Nadeer    | Noon
		Jeff       | Winger    | Noon
		Britta     | Perry     | Night
		Ben        | Chang     | Night
		Troy       | Barnes    | Night
		Pierce     | Hawthorne | Night
 
 8. Given a dogs table, adoptions table, adopters table, and volunteers table , write queries to retrieve the following information. All tables are described below.
 
 	-Create a list of all volunteers. If the volunteer is fostering a dog, include each dog as well.
	
	-List the adopter’s name and the pet’s name for each animal adopted within the past month to be displayed as a ‘Happy Tail’ on social media.
	
	-Create a list of adopters who have not yet chosen a dog to adopt and generate all possible combinations of adopters and available dogs.
	
	-Display a list of all cats and all dogs who have not been adopted.
	
	-Create a list of volunteers who are available to foster. If they currently are fostering a dog, include the dog. Also include all dogs who are not currently in foster homes.
	
	
11. SELECT f.airplane_model FROM flights AS f WHERE (f.flight_number) IN (SELECT t.flight_number FROM transactions AS t WHERE t.seats_sold > 100);
airplane_model 
----------------
 MD80
 767
(2 rows)

SELECT f.origin, f.destination FROM flights AS f WHERE ((SELECT t.seats_sold FROM transactions AS t WHERE f.flight_number = t.flight_number) * 10 / (SELECT a.seat_capacity FROM airplane AS a WHERE a.model = f.airplane_model) > 6) ;
 origin  | destination 
---------+-------------
 Chicago | Atlanta
 Atlanta | Seattle
(2 rows)


*Floating point issue created a rounding issue so had to multiply by 10 

SELECT SUM(t.total_revenue) FROM transactions AS t WHERE t.flight_number IN (SELECT f.flight_number FROM flights AS f WHERE f.origin = 'Atlanta' OR f.destination = 'Atlanta');
  sum   
--------
 800000
(1 row)

